apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
//apply plugin: 'nu.studer.plugindev'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "0.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.0'

//    compile 'nu.studer:java-ordered-properties:1.0.1'
//    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
}

def artifactID = 'jealous-sky'
def artifactDescription = 'Encryption/Decryption Library for Android'
def artifactTags = ['encryption', 'decryption', 'library', 'Android', 'file encryption', 'file decryption', 'AES', '128bit', 'bitmap decryption']
def implementationClass = 'com.github.cirorizzo.JealousSky'
def siteUrl = 'https://github.com/cirorizzo/JealousSky'
def gitUrl = 'https://github.com/cirorizzo/JealousSky.git'
def issueUrl = 'https://github.com/cirorizzo/JealousSky/issues'

def licenseName = 'GPL-3.0'
def licenseUrl = 'http://www.gnu.org/licenses/gpl-3.0.txt'

def devAuthorId = 'cirorizzo'
def devAuthorName = 'Ciro Rizzo'
def devAuthorEmail = 'ciro.rizzo@gmail.com'

def publishedYear = '2015'

group = 'com.github.cirorizzo'
version = "0.1"


//plugindev {
//    pluginId group
//    pluginName artifactID
//    pluginImplementationClass implementationClass
//    pluginDescription artifactDescription
//    pluginLicenses licenseName
//    pluginTags 'encryption', 'decryption', 'library', 'Android', 'file encryption', 'file decryption', 'AES', '128bit', 'bitmap decryption'
//    authorId devAuthorId
//    authorName devAuthorName
//    authorEmail devAuthorEmail
//    projectUrl siteUrl
//    projectIssuesUrl issueUrl
//    projectVcsUrl gitUrl
//    projectInceptionYear publishedYear
//    pomConfiguration {
//        name artifactId
//        description artifactDescription
//        url siteUrl
//        inceptionYear publishedYear
//        licenses {
//            license {
//                name licenseName
//                url licenseUrl
//            }
//        }
//        developers {
//            developer {
//                id devAuthorId
//                name devAuthorName
//                email devAuthorEmail
//            }
//        }
//        scm {
//            connection gitUrl
//            developerConnection gitUrl
//            url siteUrl
//        }
//    }
//    done()
//}



task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
//    pkg.repo = 'maven'

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = artifactID
        desc = artifactDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        issueTrackerUrl = issueUrl
        licenses = [licenseName]
        publish = true
        version {
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
            }
            publicDownloadNumbers = true
        }
    }
}




